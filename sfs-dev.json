{
   "AWSTemplateFormatVersion" : "2010-09-09",
   "Description" : "This template creates a development environment with VPC + EC2 + EFS.",
   "Parameters" : {
     "KeyName": {
       "Type": "AWS::EC2::KeyPair::KeyName",
       "Description": "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
      }
   },
   "Resources" : {
      "VPC" : {
         "Type" : "AWS::EC2::VPC",
         "Properties" : {
            "CidrBlock" : "192.168.0.0/16",
            "EnableDnsSupport" : "true",
            "EnableDnsHostnames" : "true",
            "InstanceTenancy" : "default",
            "Tags" : [{
              "Key": "Name",
              "Value" : { "Fn::Join": ["", ["vpc-", {"Ref" : "AWS::StackName" } ]]}
            }]
         }
      },
      "VPCsubneta" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock" : "192.168.32.0/18",
            "AvailabilityZone" : { "Fn::Join" : ["", [ { "Ref" : "AWS::Region" }, "a" ]] }
         }
      },
      "VPCsubnetb" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock" : "192.168.64.0/18",
            "AvailabilityZone" : { "Fn::Join" : ["", [ { "Ref" : "AWS::Region" }, "b" ]] }
         }
      },
      "VPCsubnetc" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock" : "192.168.128.0/18",
            "AvailabilityZone" : { "Fn::Join" : ["", [ { "Ref" : "AWS::Region" }, "c" ]] }
         }
      },
      "SFSInternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway"
      },
      "AttachGateway" : {
          "Type" : "AWS::EC2::VPCGatewayAttachment",
          "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "InternetGatewayId" : { "Ref" : "SFSInternetGateway" }
        }
      },
      "SFSRouteTable" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" }
         }
      },
      "SFSInternetRoute" : {
         "Type" : "AWS::EC2::Route",
         "DependsOn" : "SFSInternetGateway",
         "Properties" : {
            "RouteTableId" : { "Ref" : "SFSRouteTable" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : { "Ref" : "SFSInternetGateway" }
         }
      },
      "SFSRouteTableAssociationa" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubneta" },
          "RouteTableId" : { "Ref" : "SFSRouteTable" }
        }
      },
      "SFSRouteTableAssociationb" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubnetb" },
          "RouteTableId" : { "Ref" : "SFSRouteTable" }
        }
      },
      "SFSRouteTableAssociationc" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubnetc" },
          "RouteTableId" : { "Ref" : "SFSRouteTable" }
        }
      },
      "PublicNetworkAcl" : {
        "Type" : "AWS::EC2::NetworkAcl",
        "Properties" : {
          "VpcId" : {"Ref" : "VPC"}
        }
      },
      "InboundPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
          "RuleNumber" : "102",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "false",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : { "From" : "0", "To" : "65535" }
        }
      },
      "OutboundPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
          "RuleNumber" : "100",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "true",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : {"From" : "0", "To" : "65535"}
        }
      },
      "PublicSubnetNetworkAclAssociationa" : {
        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubneta" },
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
        }
      },
      "PublicSubnetNetworkAclAssociationb" : {
        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubnetb" },
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
        }
      },
      "PublicSubnetNetworkAclAssociationc" : {
        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "VPCsubnetc" },
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
        }
      },
      "VPCSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "For EC2 Instances",
          "VpcId" : { "Ref"  : "VPC"},
          "SecurityGroupIngress" : [
            {
              "IpProtocol" : "tcp",
              "FromPort" : "0",
              "ToPort" : "65535",
              "CidrIp" : "0.0.0.0/0"
            }
          ],
          "SecurityGroupEgress" : [
            {
              "IpProtocol" : "tcp",
              "FromPort" : "0",
              "ToPort" : "65535",
              "CidrIp" : "0.0.0.0/0"
            }
          ]
        }
      },
      "MountTargetSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "GroupDescription": "Security group for mount target",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "2049",
              "ToPort": "2049",
              "CidrIp": "192.168.0.0/16"
            }
          ]
        }
      },
      "FileSystem": {
        "Type": "AWS::EFS::FileSystem",
        "Properties": {
          "PerformanceMode": "generalPurpose",
          "FileSystemTags": [
            {
              "Key": "Name",
              "Value": { "Fn::Join": ["", ["fs-", {"Ref" : "AWS::StackName" }]]}
            }
          ]
        }
      },
      "MountTargeta": {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": { "Ref": "FileSystem" },
          "SubnetId": { "Ref": "VPCsubneta" },
          "SecurityGroups": [ { "Ref": "MountTargetSecurityGroup" } ]
        }
      },
      "MountTargetb": {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": { "Ref": "FileSystem" },
          "SubnetId": { "Ref": "VPCsubnetb" },
          "SecurityGroups": [ { "Ref": "MountTargetSecurityGroup" } ]
        }
      },
      "MountTargetc": {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": { "Ref": "FileSystem" },
          "SubnetId": { "Ref": "VPCsubnetc" },
          "SecurityGroups": [ { "Ref": "MountTargetSecurityGroup" } ]
        }
      },

      "DevServer": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "ImageId": "ami-6cd6f714",
            "InstanceType": "t2.micro",
            "KeyName": { "Ref" : "KeyName" },
            "CreditSpecification": {
              "CPUCredits": "unlimited"
            },
            "NetworkInterfaces": [ {
              "AssociatePublicIpAddress": "true",
              "DeviceIndex": "0",
              "GroupSet": [ { "Ref" : "VPCSecurityGroup" }  ],
              "SubnetId": { "Ref" : "VPCsubneta" }
            }]
        }
      }
   }
}
